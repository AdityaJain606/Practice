#include <iostream>

using namespace std;
class node{
    public:
    int data;
    node* prev;
    node* next;
    node(int data){
        this->data=data;
        this->next=NULL;
        this->prev=NULL;
    }
};
void IAH(node* &head,int d){
    node* temp=new node(d);
    temp->next=head;
    head->prev=temp;
    head=temp;
}
void IAT(node* tail, int d){
    node* temp=new node(d);
    temp->prev=tail;
    tail->next=temp;
    tail=temp;
}
void IAP(node* head,node* tail,int p,int d){
    if(p==1){
        IAH(head,d);
    }
    node* temp=head;
    int cnt=1;
    while(cnt<p-1){
        temp=temp->next;
        cnt++;
    }
    if(temp->next==NULL){
        IAT(tail,d);
    }
    node* id=new node(d);
    id->prev=temp;
    id->next=temp->next;
    temp->next->prev=id;
    temp->next=id;
}
void print(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main(){
    node* node1=new node(10);
    node* head=node1;
    node* tail=node1;
    IAH(head,19);
    IAT(tail,5);
    print (head);
    cout<<endl;
    IAP(head,tail,3,99);
    print(head);
}
